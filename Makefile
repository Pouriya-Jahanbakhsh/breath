# Auto-generated by https://github.com/Pouriya-Jahanbakhsh/estuff

CFG_DIR                      = $(CURDIR)/config
TOOLS_DIR                    = $(CURDIR)/tools
REBAR                        = $(TOOLS_DIR)/rebar3
ERL                         := $(shell command -v erl 2> /dev/null)
RELEASE_DIR                  = $(CURDIR)/_build/default/rel/breath
VERSION                     := $(shell cat VERSION | tr -ds \n \r)
RELEASE_NAME                 = breath-$(VERSION)
NAME_UPPER                  := $(shell echo breath | awk '{print toupper($$1)}')

PRE         = @
POST        = > /dev/null
REBAR_DEBUG =

v = 0
ifeq ($(v),1)
PRE  =
POST =
endif

ifeq ($(v),2)
PRE         =
POST        =
REBAR_DEBUG = 1
endif

coverage = 0
ifeq ($(coverage),0)
coverage = /dev/null
endif



ifndef ERL
$(error Could not found Erlang/OTP ('erlc' command) installed on this system.)
endif


.PHONY: all compile shell docs test dialyzer cover release tar clean distclean docker


all: test docs release


compile:
	@ echo Compiling code
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=COMPILE      && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) compile                           \
        $(POST)
	$(PRE) cp -r $(CURDIR)/_build/default/lib/breath/ebin $(CURDIR)


shell: maybe-compile-user_default
	@ echo Compiling code
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=SHELL        && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) compile                           \
        $(POST)
	$(PRE)                                               \
            erl -pa $(shell ls -d _build/default/lib/*/ebin) \
                -pz $(TOOLS_DIR)                             \
                -config $(CFG_DIR)/sys.config                \
                -args_file $(CFG_DIR)/vm.args                \
                -eval "begin application:load('breath'), catch code:load_file('breath') end"


maybe-compile-user_default:
ifeq (,$(wildcard $(TOOLS_DIR)/user_default.beam))
	@ echo Compiling user_default module
	$(PRE) erlc -o $(TOOLS_DIR) $(TOOLS_DIR)/user_default.erl $(POST)
endif


docs:
	@ echo Building documentation
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=DOC          && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) edoc                              \
        $(POST)


test: cover


dialyzer: compile
	@ echo Running dialyzer
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=DIALYZER     && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) dialyzer                          \
        $(POST)


cover: compile
	@ echo Running tests
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=TEST         && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) do ct, cover                      \
        $(POST)
	@ echo Coverage summary:
	$(PRE) \
            awk -f $(TOOLS_DIR)/coverage_summary.awk   \
                indent="\t"                            \
                $(CURDIR)/_build/test/cover/index.html \
            || true
	$(PRE)                                            \
            awk -f $(TOOLS_DIR)/coverage_summary.awk      \
                   indent=""                              \
                   pre_name=""                            \
                   post_name=""                           \
                   pre_no_test_percentage=""              \
                   post_no_test_percentage=""             \
                   pre_low_percentage=""                  \
                   post_low_percentage=""                 \
                   pre_normal_percentage=""               \
                   post_normal_percentage=""              \
                   pre_high_percentage=""                 \
                   post_high_percentage=""                \
                   $(CURDIR)/_build/test/cover/index.html \
            > $(coverage) || true


release: compile
	@ echo Building release $(RELEASE_NAME)
	$(PRE)                                         \
            export $(NAME_UPPER)_BUILD=RELEASE      && \
            export DEBUG=$(REBAR_DEBUG)             && \
            export $(NAME_UPPER)_VERSION=$(VERSION) && \
            $(REBAR) release                           \
        $(POST)
	$(PRE) mkdir -p $(CURDIR)/$(RELEASE_NAME) $(POST)
	$(PRE) cp -r $(RELEASE_DIR)/* $(CURDIR)/$(RELEASE_NAME) $(POST)


tar: release
	$(PRE) tar -zcvf $(RELEASE_NAME).tar.gz $(CURDIR)/$(RELEASE_NAME) $(POST)


clean:
	@ echo Cleaning out
	$(PRE) $(REBAR) clean $(POST)
	$(PRE) rm -rf $(CURDIR)/ebin $(POST)


distclean: clean
	$(PRE) rm -rf _build rebar.lock doc/*.* $(RELEASE_NAME)* ebin $(POST)


docker:
	$(PRE) docker build -t breath ./ $(POST)
